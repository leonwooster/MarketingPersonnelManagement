# Windsurf Project Rules - Marketing Personnel Management System

## File Management Tool Preference
- **PRIMARY**: Use standard Windsurf tools (Read, Edit, Write, etc.) for file operations
- **FALLBACK**: Use MCP filesystem tools (mcp0_*) only when standard tools fail or are insufficient
- **RATIONALE**: Cost optimization - use MCP tools only when necessary

## MCP Filesystem Tools to Use:
- `mcp0_read_text_file` instead of `Read`
- `mcp0_write_file` instead of `write_to_file` or `Edit`
- `mcp0_edit_file` instead of `Edit` or `MultiEdit`
- `mcp0_create_directory` for directory creation
- `mcp0_list_directory` for directory listing
- `mcp0_search_files` for file searching
- `mcp0_move_file` for file operations
- `mcp0_get_file_info` for file metadata

## Project Context
- **Type**: Marketing Personnel Management System
- **Architecture**: .NET 9.0 layered architecture with SPA frontend
- **Database**: SQL Server with EF Core
- **Frontend**: Bootstrap 5 + vanilla JavaScript SPA
- **API**: ASP.NET Core Web API with REST endpoints

## Development Guidelines
- Follow Sprint-based development approach
- Implement comprehensive validation (client + server)
- Use proper error handling and logging
- Maintain clean separation of concerns across layers
- Prioritize user experience and responsive design

## Current Status
- Sprint 1: COMPLETED (Database schema, Personnel CRUD API, SPA grid/modals)
- Ready for Sprint 2: Sales tracking and commission calculations