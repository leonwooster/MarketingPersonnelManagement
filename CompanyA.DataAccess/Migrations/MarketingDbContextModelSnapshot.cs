// <auto-generated />
using System;
using CompanyA.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompanyA.DataAccess.Migrations
{
    [DbContext(typeof(MarketingDbContext))]
    partial class MarketingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompanyA.DataAccess.Models.CommissionProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CommissionFixed")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("commission_fixed");

                    b.Property<decimal>("CommissionPercentage")
                        .HasColumnType("decimal(10,6)")
                        .HasColumnName("commission_percentage");

                    b.Property<int>("ProfileName")
                        .HasColumnType("int")
                        .HasColumnName("profile_name");

                    b.HasKey("Id");

                    b.ToTable("CommissionProfile", t =>
                        {
                            t.HasCheckConstraint("CK_CommissionProfile_Fixed", "commission_fixed >= 0");

                            t.HasCheckConstraint("CK_CommissionProfile_Percentage", "commission_percentage >= 0 AND commission_percentage <= 1");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommissionFixed = 500.00m,
                            CommissionPercentage = 0.050000m,
                            ProfileName = 1
                        },
                        new
                        {
                            Id = 2,
                            CommissionFixed = 750.00m,
                            CommissionPercentage = 0.030000m,
                            ProfileName = 2
                        },
                        new
                        {
                            Id = 3,
                            CommissionFixed = 300.00m,
                            CommissionPercentage = 0.080000m,
                            ProfileName = 3
                        });
                });

            modelBuilder.Entity("CompanyA.DataAccess.Models.Personnel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<string>("BankAccountNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("bank_account_no");

                    b.Property<string>("BankName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("bank_name");

                    b.Property<int>("CommissionProfileId")
                        .HasColumnType("int")
                        .HasColumnName("commission_profile_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.HasIndex("CommissionProfileId")
                        .HasDatabaseName("IX_Personnel_CommissionProfileId");

                    b.ToTable("Personnel", t =>
                        {
                            t.HasCheckConstraint("CK_Personnel_Age", "age >= 19");

                            t.HasCheckConstraint("CK_Personnel_Name", "LEN(LTRIM(RTRIM(name))) > 0");

                            t.HasCheckConstraint("CK_Personnel_Phone", "LEN(LTRIM(RTRIM(phone))) > 0");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 25,
                            BankAccountNo = "1234567890",
                            BankName = "Chase Bank",
                            CommissionProfileId = 1,
                            Name = "John Smith",
                            Phone = "555-0101"
                        },
                        new
                        {
                            Id = 2,
                            Age = 28,
                            BankAccountNo = "2345678901",
                            BankName = "Wells Fargo",
                            CommissionProfileId = 2,
                            Name = "Sarah Johnson",
                            Phone = "555-0102"
                        },
                        new
                        {
                            Id = 3,
                            Age = 32,
                            BankAccountNo = "3456789012",
                            BankName = "Bank of America",
                            CommissionProfileId = 1,
                            Name = "Michael Brown",
                            Phone = "555-0103"
                        },
                        new
                        {
                            Id = 4,
                            Age = 24,
                            BankAccountNo = "4567890123",
                            BankName = "Citibank",
                            CommissionProfileId = 3,
                            Name = "Emily Davis",
                            Phone = "555-0104"
                        },
                        new
                        {
                            Id = 5,
                            Age = 29,
                            BankAccountNo = "5678901234",
                            BankName = "TD Bank",
                            CommissionProfileId = 2,
                            Name = "David Wilson",
                            Phone = "555-0105"
                        });
                });

            modelBuilder.Entity("CompanyA.DataAccess.Models.Sales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PersonnelId")
                        .HasColumnType("int")
                        .HasColumnName("personnel_id");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("report_date");

                    b.Property<decimal>("SalesAmount")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("sales_amount");

                    b.HasKey("Id");

                    b.HasIndex("PersonnelId")
                        .HasDatabaseName("IX_Sales_PersonnelId");

                    b.HasIndex("ReportDate")
                        .HasDatabaseName("IX_Sales_ReportDate");

                    b.ToTable("Sales", t =>
                        {
                            t.HasCheckConstraint("CK_Sales_Amount", "sales_amount >= 0");

                            t.HasCheckConstraint("CK_Sales_Date", "report_date <= GETDATE()");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PersonnelId = 1,
                            ReportDate = new DateTime(2024, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalesAmount = 1250.00m
                        },
                        new
                        {
                            Id = 2,
                            PersonnelId = 1,
                            ReportDate = new DateTime(2024, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalesAmount = 980.50m
                        },
                        new
                        {
                            Id = 3,
                            PersonnelId = 2,
                            ReportDate = new DateTime(2024, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalesAmount = 2150.00m
                        },
                        new
                        {
                            Id = 4,
                            PersonnelId = 2,
                            ReportDate = new DateTime(2024, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalesAmount = 1875.50m
                        },
                        new
                        {
                            Id = 5,
                            PersonnelId = 3,
                            ReportDate = new DateTime(2024, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalesAmount = 950.00m
                        });
                });

            modelBuilder.Entity("CompanyA.DataAccess.Models.Personnel", b =>
                {
                    b.HasOne("CompanyA.DataAccess.Models.CommissionProfile", "CommissionProfile")
                        .WithMany("Personnel")
                        .HasForeignKey("CommissionProfileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CommissionProfile");
                });

            modelBuilder.Entity("CompanyA.DataAccess.Models.Sales", b =>
                {
                    b.HasOne("CompanyA.DataAccess.Models.Personnel", "Personnel")
                        .WithMany("Sales")
                        .HasForeignKey("PersonnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personnel");
                });

            modelBuilder.Entity("CompanyA.DataAccess.Models.CommissionProfile", b =>
                {
                    b.Navigation("Personnel");
                });

            modelBuilder.Entity("CompanyA.DataAccess.Models.Personnel", b =>
                {
                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
